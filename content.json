{"meta":{"title":"br1ghtLi的个人博客","subtitle":"br1ghtLi's blog","description":"这里是br1ghtLi的学习记录博客","author":"br1ghtLi","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"Kafka一键启动脚本","slug":"Kafka一键启动脚本","date":"2022-11-18T11:54:22.000Z","updated":"2023-10-21T11:56:41.601Z","comments":true,"path":"2022/11/18/Kafka一键启动脚本/","link":"","permalink":"http://example.com/2022/11/18/Kafka%E4%B8%80%E9%94%AE%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/","excerpt":"","text":"Kafka 一键启动脚本 1234567891011121314151617181920212223242526272829303132333435363738394041#!/bin/bashZOOKEEPER_SERVER=&quot;/export/server/zookeeper/bin/zkServer.sh&quot;KAFKA_SERVER=&quot;/export/server/kafka/bin/&quot;KAFKA_CONFIG=&quot;/export/server/kafka/config/server.properties&quot;if [ $# -ne 0 ];then if [ $1 == &quot;start&quot; ];then echo &quot;zookeeper服务启动中......&quot; for i in node1 node2 node3 do ssh $i &quot;source /etc/profile &amp;&amp; $&#123;ZOOKEEPER_SERVER&#125; start&quot; done for i in &#123;5..1&#125; do echo &quot;倒计时: $i秒&quot; sleep 1 done echo &quot;kafka服务启动中......&quot; for i in node1 node2 node3 do ssh $i &quot;source /etc/profile &amp;&amp; $&#123;KAFKA_SERVER&#125;/kafka-server-start.sh -daemon $&#123;KAFKA_CONFIG&#125;&quot; done fi if [ $1 == &quot;stop&quot; ];then echo &quot;kafka服务关闭中......&quot; for i in node1 node2 node3 do ssh $i &quot;source /etc/profile &amp;&amp; $&#123;KAFKA_SERVER&#125;/kafka-server-stop.sh&quot; done for i in &#123;5..1&#125; do echo &quot;倒计时: $i秒&quot; sleep 1 done echo &quot;zookeeper服务关闭中......&quot; for i in node1 node2 node3 do ssh $i &quot;source /etc/profile &amp;&amp; $&#123;ZOOKEEPER_SERVER&#125; stop&quot; done fifi Zookeeper 一键启动脚本 1234567891011121314151617181920212223#!/bin/bashZOOKEEPER_SERVER=&quot;/export/server/zookeeper/bin/zkServer.sh&quot;if [ $# -ne 0 ];then if [ $1 == &quot;start&quot; ];then for i in node1 node2 node3 do ssh $i &quot;source /etc/profile &amp;&amp; $&#123;ZOOKEEPER_SERVER&#125; start&quot; done fi if [ $1 == &quot;status&quot; ];then for i in node1 node2 node3 do ssh $i &quot;source /etc/profile &amp;&amp; $&#123;ZOOKEEPER_SERVER&#125; status&quot; done fi if [ $1 == &quot;stop&quot; ];then for i in node1 node2 node3 do ssh $i &quot;source /etc/profile &amp;&amp; $&#123;ZOOKEEPER_SERVER&#125; stop&quot; done fifi","categories":[],"tags":[]},{"title":"Linux常用命令","slug":"Linux常用命令","date":"2022-09-11T16:00:00.000Z","updated":"2023-10-19T13:37:27.996Z","comments":true,"path":"2022/09/12/Linux常用命令/","link":"","permalink":"http://example.com/2022/09/12/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"","text":"一、开关机命令1231.shutdown -h now: 立即关机2.reboot: 重启3.logout: 注销 二、 快捷命令123451.tab: 补全命令2.ctrl + l: 清空屏幕，类似clear3.ctrl + r: 查找历史命令，类似history4.ctrl + k: 删除此处至末尾所有内容5.ctrl + u: 删除此处至开始所有内容 三、日常操作命令 ls 123456789ls命令是列出目录内容的意思（List Directtory Contents）。运行它就是列出文件夹的内容，可能是文件也可能是文件夹。ls -l(ll): 以详情模式(long listing fashion)列出文件夹的内容。ls -a: 列出文件夹里的所有内容，包括以&quot;.&quot;开头的隐藏文件。lsof -i:端口号: 查询端口号对应程序信息注意：在Linux中，文件以“.”开头就是隐藏文件，并且每个文件，文件夹，设备或者命令都是以文件对待 lsblk 12345lsblk就是列出块设备。除了RAM外，以标准的树状输出格式，整齐地显示块设备。lsblk -l: 列表格式显示块设备(而不是树状格式)。注意：lsblk是最有用和最简单的方式来了解新插入的USB设备的名字，特别是当你在终端上处理磁盘/块设备时。 uname 123&quot;uname&quot;命令就是Unix Name的简写。显示机器名，操作系统和内核的详细信息。注意：uname显示内核类别，uname -a显示详细信息。 history 1“history”命令就是历史记录。它显示了在终端中所执行过的所有命令的历史。 sudo 12345“sudo”(super userdo)命令允许授权用户执行超级用户或者其它用户的命令。通过在sudoers列表的安全策略来指定。注意：sudo允许用户借用超级用户的权限，然而&quot;su&quot;命令实际上是允许用户以超级用户登录。所以sudo比su更安全。并不建议使用sudo或者su来处理日常用途，因为它可能导致严重的错误如果你意外的做错了事。 chmod 1“chmod”命令就是改变文件的模式位。chmod会根据要求的模式来改变每个所给的文件，文件夹，脚本等等的文件模式（权限）。 chown 123“chown”命令就是改变文件拥有者和所在用户组。每个文件都属于一个用户组和一个用户。在你的目录下，使用&quot;ls -l&quot;,你就会看到像这样的东西。 apt 123Debian系列以“apt”命令为基础，“apt”代表了Advanced Package Tool。APT是一个为Debian系列系统（Ubuntu，Kubuntu等等）开发的高级包管理器。在Gnu/Linux系统上，它会为包自动地，智能地搜索，安装，升级以及解决依赖。例如：apt-get install mplayer cal 1“cal”（Calender），它用来显示当前月份或者未来或者过去任何年份中的月份。 date 1“date”命令使用标准的输出打印当前的日期和时间，也可以深入设置。 四、 系统常用操作命令 1、 指定运行级别 12345678默认运行级别init 0: 关机init 1: 单用户init 2: 多用户状态没有网络服务init 3: 多用户状态有网络服务init 4: 系统未使用保留给用户init 5: 图形化界面init 6: 重启 2、 文件显示命令 123456789cat: 一次性显示整个文件的内容，还可以将多个文件连接起来显示，常与重定向符号配合使用，适合小文件读取more: 分页显示文件内容，只能后翻页less: 分页显示文件内容，不限制翻页方向head: 显示文件头部内容，默认显示前10行tail: 显示文件尾部内容，默认显示后10行tail -f: 监视文件的尾部内容grep: 查询内容，常配合管道符进行内容检索 |: 将|左边命令的结果交给|右边的命令进行处理cut: 显示每行从开头算起第num1到num2的字符 3、 文件搜索命令 1find: 搜索文件及目录 4、 重定向命令 1重定向命令: &quot;&gt;&quot;为覆盖, &quot;&gt;&gt;&quot;追加内容到文件尾部 5、 文件及目录增删改命令 1234567mkdir -p: 创建多级目录rm -rf: 递归删除目录不需要确认cd: 切换到指定目录中touch: 创建一个空文件cp -r: 递归拷贝目录mv: 剪切目录，如果源文件与目标位置是同一目录则命名ln -s: 创建软连接 6、 其他命令 123456789who: 显示登录系统的用户信息 whoami: 显示当前登录的用户sleep: 将当前动作延迟一段时间kill: 默认用于终止进程ps: 显示进程的名称、占用资源、状态 ps -ef: 查看服务器进程全部信息top: 显示CPU使用率、内存大小、内存使用率、进程状态等df -h: 查看磁盘占用的空间netstat -tunple | grep 端口号: 查询端口号相关进程信息 pwd: 查看当前路径","categories":[],"tags":[]}],"categories":[],"tags":[]}